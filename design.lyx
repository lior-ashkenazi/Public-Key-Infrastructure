#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{tikz}
\usepackage{pgf}
\usetikzlibrary{automata,positioning}
\usepackage{diagbox}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
PublicKeyInfrastructure - Design Document
\end_layout

\begin_layout Author
Lior Ashkenazi | 315533059
\end_layout

\begin_layout Section
Preface
\end_layout

\begin_layout Standard
This project consist of Public Key Infrastructure, PKI, where a user can
 generate entities in this ecosystem of the following types:
\end_layout

\begin_layout Itemize
Root Certificate Authority Entity - a CA which signs it self, has no predecessor.
\end_layout

\begin_layout Itemize
Certificate Authority Entity - an intermediate entity which is a CA but
 signed by another Root CA / Intermediate CA.
\end_layout

\begin_layout Itemize
Certificate Entity - an intermediate entity, which is not a CA, therefore
 it is not authorised to sign other entities.
\end_layout

\begin_layout Standard
Moreover, there is a Validation Authority, which more details on it will
 be shown next.
\end_layout

\begin_layout Standard
Now, we describe next the modules of the project.
\end_layout

\begin_layout Section
Certification
\end_layout

\begin_layout Standard
Responsible for certificates generation, caching and validation, where the
 pythonic module pyOpenSSL, using SSL/TLS technology, is used and is in
 fact the base of the entire project where is wrapped by this module.
 Therefore, all the basic technologies and certificates are real-life certificat
es and objects.
 Moreover, generation under this module involves generating cryptographic
 tools for signing and validating certificates, which are X509 certificates
 under SSL.
 Furthermore, CRL system is also implemented, where each CA has a CRL.
 Finally, The caching system is also part of this module, where it is necessitat
ed because of the SSL Networking module, where communication under SSL.
\end_layout

\begin_layout Section
Entities
\end_layout

\begin_layout Standard
Incoporates the generation of 
\begin_inset Quotes eld
\end_inset

Entities
\begin_inset Quotes erd
\end_inset

 with all sorts of authorised levels and responsible for linking this generation
 to an actual generation of certificates, meaning that every entity has
 a real certificate and the relevant cryptographic objects.
 Also, it responsbile for the communication between entities, which is done
 safely, thanks to the Validation Authority.
 This entity is distinct and uniqe.
 Through this entity, before communicating with another entity, every entity
 can request validation of the other entity.
 In particular, revocation mechanism is implemented, as requested, in this
 module.
 Therefore, any authorised entity can revoke an entity which is issued,
 and only an issued entity.
 The VA thus can validate that an entity is not revoked and it is safe for
 communication.
 Finally, all of those operations is done by 
\begin_inset Quotes eld
\end_inset

controller.py
\begin_inset Quotes erd
\end_inset

 file which operates the entire entities ecosystem and virtually operates
 the entire project.
 Any action involving entities goes through this file.
\end_layout

\begin_layout Section
SSL Networking
\end_layout

\begin_layout Standard
Network infrastrucure used for communication between entities.
 Entities in this version of the project can communicate with each other
 through text.
 The protocol of the network is TCP wrapped by SSL network for safety reasons.
 Before communication, entities has to validate their addressee.
 
\end_layout

\begin_layout Section
Instructions
\end_layout

\begin_layout Standard
For activating the program, please create a python virtual environment in
 the program's folder.
 Then, install the requirements by entering the following command in a terminal
 open in the project's folder:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

pip install -r requirements.txt
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
(Actually, installing the most recent version of pyOpenSSL is enough)
\end_layout

\begin_layout Standard
Then, activate the program by entering this command:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

python main.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
(python3 or python, depends on your OS)
\end_layout

\begin_layout Standard
and you should the instructions for operating the program:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename instructions.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Instructions
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Good Luck :)
\end_layout

\end_body
\end_document
